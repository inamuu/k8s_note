apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    metadata:
      labels:
        type: karpenter
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["arm64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["c", "m", "r"]
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: ["2"]
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      expireAfter: 720h # 30 * 24h = 720h
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 1m
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2023 # Amazon Linux 2023
  role: "KarpenterNode"
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "karpenter"
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "karpenter"
  amiSelectorTerms:
    #- id: "ami-0b7b1ff91a2a1e299" # x86_64, AL2023, 20241025
    #- id: "ami-0b030014524e79d95" # x86_64, AL2023, 20240917
    - id: "ami-0a8004f64b9d60cc0" # arm64, AL2023, 20241025
    #- id: "ami-0ca4168752678c233" # arm64, AL2023, 20240920
    #- id: "ami-098236dbc01db432f" # arm64, AL2023, 20241016
  tags:
    Name: karpenter-node
